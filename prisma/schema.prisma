generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ThemePref {
  LIGHT
  DARK
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  themePref ThemePref @default(LIGHT)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  clients      Client[]
  projects     Project[]
  interactions Interaction[]
  reminders    Reminder[]
}

model Client {
  id        String    @id @default(uuid())
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  name      String
  email     String
  phone     String?
  company   String?
  notes     String?
  themePref ThemePref @default(LIGHT)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  projects     Project[]
  interactions Interaction[]
  reminders    Reminder[]
}

enum Status {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

model Project {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  clientId  String
  client    Client   @relation(fields: [clientId], references: [id])
  title     String
  budget    Int
  deadline  DateTime
  status    Status   @default(PENDING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  interactions Interaction[]
  reminders    Reminder[]
}

enum InteractionType {
  EMAIL
  MEETING
  CALL
}

model Interaction {
  id        String          @id @default(uuid())
  userId    String
  user      User            @relation(fields: [userId], references: [id])
  clientId  String
  client    Client          @relation(fields: [clientId], references: [id])
  projectId String
  project   Project         @relation(fields: [projectId], references: [id])
  type      InteractionType @default(EMAIL)
  notes     String?
  date      DateTime
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
}

model Reminder {
  id          String   @id @default(uuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  clientId    String
  client      Client   @relation(fields: [clientId], references: [id])
  projectId   String
  project     Project  @relation(fields: [projectId], references: [id])
  title       String
  dueDate     DateTime
  notes       String
  isCompleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
