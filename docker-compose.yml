version: '3.8'

services:
  tn_server:
    container_name: tn_server
    build:
      context: .
      target: development
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:3000/api
      - DATABASE_URL=postgres://postgres:admin@tn_postgres:5432/freelancer_crm?connect_timeout=5
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 20s
    command: npm run start:dev
    networks:
      - app_network

  postgres:
    container_name: tn_postgres
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=freelancer_crm
      - LANG=en_US.utf8
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d freelancer_crm"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    networks:
      - app_network

  pgadmin:
    container_name: tn_pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    ports:
      - '5050:80'
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/login || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always
    networks:
      - app_network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  app_network:
    driver: bridge
    